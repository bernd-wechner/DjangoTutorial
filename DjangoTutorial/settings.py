"""
Django settings for DjangoTutorial project.

Generated by 'django-admin startproject' using Django 1.11.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os, sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-%)of5)esg6bn-o2qxb250yj$qjkp)g82)lopx*9akft0=ld7x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Library'   
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'DjangoTutorial.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoTutorial.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'DjangoTutorial',
        'USER': 'django',
        'PASSWORD': 'tutorial',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# This is where manage.py collectstatic will place all the static files
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

# And this is the URL where static files will be expected by django pages
STATIC_URL = "/static/"

# Provided extended results from Celery tasks
#
# Documented as:
#
# Enables extended task result attributes 
# (name, args, kwargs, worker, retries, queue, delivery_info) 
# to be written to backend.
#
# Docs are unclear on case. I have instrumented Celery core and proven that this doesn't stick:
#
# CELERY_result_extended = True
#
# And this does:

CELERY_RESULT_EXTENDED = True


# Configure logging
from .logging import RelativeFilter

log_format = '%(prefix)s%(relativeReference)9.4f, %(relativeLast)9.4f, %(filename)20s:%(lineno)4d, %(funcName)20s - %(message)s%(postfix)s'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': { 'default': { 'format': log_format } },
    'filters': { 'relative': { '()': RelativeFilter } },        
    'handlers':
         { 'console': 
            {'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'stream': sys.stdout,  # Optional but forces text black, without this DEBUG text is red.
            'formatter': 'default',
            'filters': ['relative']
            }
         },
     'loggers':
        { 'default': 
            { 'handlers': ['console'], 
              'level': os.getenv('DJANGO_LOG_LEVEL', 'DEBUG'),
              'propagate': False 
            }, 
          'celery_interactive': 
            { 'handlers': ['console'], 
              'level': os.getenv('DJANGO_LOG_LEVEL', 'DEBUG'),
              'propagate': False 
            }            
            
        }
}
